<script>
    window.addEventListener('DOMContentLoaded', () => {
        const galleryItems = document.querySelectorAll('.gallery__item')
        const bakdrop = document.querySelector('.bakdrop')
        const modal = document.querySelector('.modal')
        const close = document.querySelector('.modal__dialog__close')
        const dialog = document.querySelector('.modal__dialog')
        const dialogImage = document.querySelector('.modal__dialog__image')
        const dialogTitle = document.querySelector('.modal__dialog__text__title')
        const dialogdescription = document.querySelector('.modal__dialog__text__description')

        const openModal = (item: Element) => {
            document.body.style.overflowY = 'hidden'
            bakdrop?.classList.add('show')
            modal?.classList.add('show')
            dialog?.classList.add('show')

            if (dialogImage) {
                const dataImage = item.getAttribute('data-image')
                dialogImage.setAttribute('src', `${dataImage}`);
            }

            if (dialogTitle) {
                dialogTitle.innerHTML = item.getAttribute('data-title') || ''
            }

            if (dialogdescription) {
                dialogdescription.innerHTML = item.getAttribute('data-description') || ''
            }
        }

        const closeModal = () => {
            document.body.removeAttribute('style')
            dialog?.classList.remove('show')

            setTimeout(() => {
                bakdrop?.classList.remove('show')
                modal?.classList.remove('show')
            }, 400)

        }

        galleryItems.forEach(item => {
            item.addEventListener('click', () => {
                openModal(item)
            })
        })

        close?.addEventListener('click', () => {
            closeModal()
        })

        modal?.addEventListener('click', (e) => {
            e.stopPropagation()

            if (e.target === modal) {
                closeModal()
            }
        })
    })
</script>

<div class="bakdrop"></div>

<div class="modal container">
    <div class="modal__dialog">
        <span class="modal__dialog__close">
            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
            </svg>
        </span>

        <img src='' alt="" class="modal__dialog__image"></img>

        <div class="modal__dialog__text">
            <p class="modal__dialog__text__title">Lorem ipsum</p>
            <p class="modal__dialog__text__description">Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam ut facere tempore porro quisquam possimus voluptate alias harum quasi quaerat quas, tempora accusamus itaque? Molestiae animi quia voluptas! Aliquam, alias.</p>
        </div>
    </div>
</div>

<style>
    .bakdrop {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: -10;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.4s;

        &.show {
            z-index: 10;
            opacity: 1;
            visibility: visible;
        }
	}

	.modal {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100vh;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: -20;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.4s;

        &.show {
            z-index: 20;
            opacity: 1;
            visibility: visible;
        }

		.modal__dialog {
			background-color: #000;
			color: #fff;
			max-width: 1000px;
			max-height: 500px;
			margin: auto;
			position: relative;
			display: grid;
            grid-template-rows: 200px 1fr;
			opacity: 0;
			transform: translateY(-150px);
			transition: transform 0.4s, opacity 0.4s;

            @media screen and (width >= 768px) {
                grid-template-columns: repeat(2, 1fr);
                grid-template-rows: 1fr;
            }

            &.show {
                opacity: 1;
                transform: translateY(0);
            }

			.modal__dialog__close {
				position: absolute;
				cursor: pointer;
                top: 0;
                right: 0;
                background-color: #000;
                
                @media screen and (width >= 768px) {
                    top: 1rem;
                    right: 1rem;
                }

				svg {
					width: 36px;
					height: 36px;

                    @media screen and (width >= 768px) {
                        width: 48px;
                        height: 48px;
                    }
				}
			}

            .modal__dialog__image {
                width: 100%;
                height: 100%;
                object-fit: cover;
                max-height: 500px;

                @media screen and (width >= 768px) {
                    min-height: 500px;
                }
            }

			.modal__dialog__text {
                padding: 1rem;
                overflow-y: auto;

                @media screen and (width >= 768px) {
                    padding: 3rem;
                }

				.modal__dialog__text__title {
                    font-size: 1.5rem;
                    margin-bottom: 1rem;
                    line-height: 1;

                    @media screen and (width >= 768px) {
                        font-size: 2.5rem;
                    }
				}

				.modal__dialog__text__description {
					font-size: 0.8rem;

                    @media screen and (width >= 768px) {
                        font-size: 1rem;
                    }
				}
			}
		}
	}
</style>